PKG_NAME=test-1.2
PKG_DEFAULT=test
PKG_VERSION=1
PKG_MAINTAINER=Test
PKG_SHORT_DESCRIPTION="test-1.2: -s bar, pkg default, wrappers"
PKG_SECTION=tools
PKG_SUBPACKAGES=foo,bar
PKG_WRAPPERS=${subpackage}

pkg_build() 
{ 
  return 0
}

pkg_install() 
{
  mkdir -p $1${bindir}

  cat >$1${bindir}/${subpackage} <<EOT
#!/bin/bash
echo "hello world"
EOT
  chmod +x $1${bindir}/${subpackage}
  
  return 0
}

PKG_RUNTESTS_MKDEB_OPTS="-s bar"
pkg_test ()
{
  local deb=$1
  local ddeb=$2
  local tmpstr

  # build ok
  if ! [ -e ${deb} ]; then
     echo "main package does not exist"
     return 1
  fi
  if ! [ -e ${ddeb} ]; then
     echo "default package does not exist"
     return 1
  fi

  # check main package metadata 
  tmpstr=$(dpkg-deb -W --showformat '${Package}_${Version}\n' ${deb})
  if [ $? != 0 ] || [ "${tmpstr}" != "test-bar-1.2_1" ]; then
     echo "Wrong metadata: ${tmpstr}"
     return 1
  fi

  # main package contains binary
  if ! dpkg-deb -c ${deb} | grep -q usr/local/tools/test-bar-1.2/bin/bar; then
      echo "package does not contain expected executable"
      return 1
  fi

  # main package contains wrapper
  if ! dpkg-deb -c ${deb} | grep -q usr/local/bin/bar; then
      echo "package does not contain expected wrapper"
      return 1
  fi

  # check default package metadata 
  tmpstr=$(dpkg-deb -W --showformat '${Package}_${Version}\n' ${ddeb})
  if [ $? != 0 ] || [ "${tmpstr}" != "test-bar_default-1.2-1" ]; then
     echo "Wrong metadata: ${tmpstr}"
     return 1
  fi

  # default package contains binary
  if ! dpkg-deb -c ${ddeb} | grep -q usr/local/tools/test-bar/bin/bar; then
      echo "package does not contain expected executable"
      return 1
  fi

  # default package contains wrapper
  if ! dpkg-deb -c ${ddeb} | grep -q usr/local/bin/bar; then
      echo "package does not contain expected wrapper"
      return 1
  fi

  return 0
}
