PKG_NAME=x-2.1
PKG_DEFAULT=x
PKG_VERSION=1
PKG_MAINTAINER=Test
PKG_SHORT_DESCRIPTION="x-2.1: macros file gets properly generated"
PKG_SECTION=tools

pkg_build() 
{ 
  return 0
}

pkg_install() 
{
  mkdir -p $1${bindir}

  touch $1${bindir}/foo
  ln -s /nonexistant $1${bindir}/bar

  return 0
}

pkg_test ()
{
  local deb=$1
  local ddeb=$2

  # build ok
  if ! [ -e ${deb} ]; then
     echo "package does not exist"
     return 1
  fi
  # default deb too
  if ! [ -e ${ddeb} ]; then
     echo "default package does not exist"
     return 1
  fi

  # main package: macros present with correct content
  if ! tmpdir=$(mktemp -d) ; then
     echo "mktemp failed"
     return 1
  fi
  if ! dpkg-deb -e ${deb} ${tmpdir}; then
     echo "failed to extract metadata from main deb"
     rm -rf ${tmpdir}
     return 1
  fi
  if ! [ -e ${tmpdir}/macros ]; then
     echo "macros was not included in main deb"
     rm -rf ${tmpdir}
     return 1
  fi
  if ! grep -q 'dpkg_prefix=/usr/local/tools/x-2.1$' ${tmpdir}/macros; then
     echo "main deb macros does not contain correct prefix"
     cat ${tmpdir}/macros
     rm -rf ${tmpdir}
     return 1
  fi
  if ! grep -q 'dpkg_name=x-2.1$' ${tmpdir}/macros; then
     echo "main deb macros does not contain correct PKG_NAME"
     cat ${tmpdir}/macros
     rm -rf ${tmpdir}
     return 1
  fi
  if ! grep -q 'dpkg_version=1$' ${tmpdir}/macros; then
     echo "main deb macros does not contain correct PKG_VERSION"
     cat ${tmpdir}/macros
     rm -rf ${tmpdir}
     return 1
  fi

  rm -rf ${tmpdir}

  # default package: macros present with correct content
  if ! tmpdir=$(mktemp -d) ; then
     echo "mktemp failed"
     return 1
  fi
  if ! dpkg-deb -e ${ddeb} ${tmpdir}; then
     echo "failed to extract metadata from default deb"
     rm -rf ${tmpdir}
     return 1
  fi
  if ! [ -e ${tmpdir}/macros ]; then
     echo "macros was not included in default deb"
     rm -rf ${tmpdir}
     return 1
  fi
  if ! grep -q 'dpkg_prefix=/usr/local/tools/x$' ${tmpdir}/macros; then
     echo "default deb macros does not contain correct prefix"
     cat ${tmpdir}/macros
     rm -rf ${tmpdir}
     return 1
  fi
  if ! grep -q 'dpkg_name=x$' ${tmpdir}/macros; then
     echo "default deb macros does not contain correct PKG_NAME"
     cat ${tmpdir}/macros
     rm -rf ${tmpdir}
     return 1
  fi
  if ! grep -q 'dpkg_version=default-2.1-1$' ${tmpdir}/macros; then
     echo "default deb macros does not contain correct PKG_VERSION"
     cat ${tmpdir}/macros
     rm -rf ${tmpdir}
     return 1
  fi

  return 0
}
