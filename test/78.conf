PKG_NAME=${meta_name}-${meta_version}
PKG_VERSION=${meta_release}
PKG_SECTION=tools
PKG_SHORT_DESCRIPTION="MVAPICH MPI" 
PKG_MAINTAINER="Mark Grondona <mgrondona@llnl.gov>"

PKG_SUBPACKAGES="gnu gnu-debug intel pgi pathscale"
PKG_VARIANTS="shmem gen2"

PKG_FLAGS="decoupledk,variantsconflict" 
PKG_DK_CATEGORY=mpi/mvapich

PKG_DEFAULT=mvapich

PKG_PROVIDES=mvapich-${variant}-${subpackage}
PKG_PROVIDES="${PKG_PROVIDES},mvapich-${variant}-${subpackage}-${meta_version}"

#
#  Build with the following list of compiler versions
#   (We use static versions of compilers because we can only
#    expect backwards not forwards compatibility for vendor compilers, 
#    so we always try to use the oldest compiler version available)
#
icc_version="icc=default-9.1.052*"
ifort_version="ifort=default-9.1.052*"
pathscale_version="pathscale=default-3.0*"
pgi_version="pgi=default-7.0.6*"

case ${subpackage} in
    gnu)
        PKG_SHORT_DESCRIPTION="$PKG_SHORT_DESCRIPTION for GNU compilers"
        ;;
    gnu-debug) 
        PKG_SHORT_DESCRIPTION="$PKG_SHORT_DESCRIPTION for GNU compilers (debug)"
        ;;
    intel)
        PKG_DEPENDS="${icc_version},${ifort_version}"
        PKG_BUILDREQUIRES="$PKG_DEPENDS"
        PKG_SHORT_DESCRIPTION="$PKG_SHORT_DESCRIPTION for Intel compilers"
        ;;
    pgi) 
        PKG_DEPENDS="$pgi_version" 
        PKG_BUILDREQUIRES="$PKG_DEPENDS" 
        PKG_SHORT_DESCRIPTION="$PKG_SHORT_DESCRIPTION for PGI compilers"
        ;;
    pathscale) 
        PKG_DEPENDS="$pathscale_version" 
        PKG_BUILDREQUIRES="$PKG_DEPENDS" 
        PKG_SHORT_DESCRIPTION="$PKG_SHORT_DESCRIPTION for PathScale compilers"
        ;;
    *)
        # Buildrequires for all subpackages:
        PKG_BUILDREQUIRES="$pathscale_version $pgi_version $icc_version $ifort_version"
    ;;
esac

pkg_build()
{
    return 0
}

pkg_install()
{
    mkdir -p $1${prefix}/etc
    touch $1${prefix}/etc/${subpackage}-${variant}
    return 0
}

PKG_RUNTESTS_MKDEB_OPTS="-s gnu-debug -V shmem" # ignored by runtestsquery
pkg_test()
{
    local deb=$1
    local ddeb=$2
    if ! [ -e ${deb} ]; then
        echo "main package does not exist"
        return 1
    fi
    if ! [ -e ${ddeb} ]; then
        echo "default package does not exist"
        return 1
    fi
    tmpfile=$(mktemp)
    dpkg -c ${deb} >${tmpfile}
    if ! grep -q /usr/local/tools/mvapich-gnu-debug-0.9.9/etc/gnu-debug-shmem ${tmpfile}; then
        echo "wrong main package content"
        dpkg -c ${deb}
    fi
    return 0
}
